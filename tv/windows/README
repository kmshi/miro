======
README
======

:Author: Will Kahn-Greene <will.guaraldi at pculture dot org>
:Date: Januayr 14, 2010


Summary
=======

This is the Gtk-Windows port of Miro.

Instructions and build requirements are documented at
https://develop.participatoryculture.org/index.php/WindowsBuildDocs

The shell scripts are written for CYGWIN, but otherwise CYGWIN is not reuired
to build Miro.

If you have problems, visit us on ``#miro-hackers`` on
``irc.freenode.net``.


Build and run
=============

To compile and run Miro in the current directory, do::

   ./run.sh

This does the following two steps:

1. ``setup_binarykit.sh``
2. ``python setup.py bdist_miro``
3. ``dist\Miro.exe``

If you have the required dependencies it should build Miro and run it.

See
https://develop.participatoryculture.org/projects/dtv/wiki/WindowsBuildDocs
for more information on building and executing the Gtk-Windows
platform code.  The information at this url is considered the
authoritative source.


Debug--compile and debug with Pydev1.6.5 plugin for eclipse(added by kmshi)
===========================================================================

1. check Miro.py to make sure the absolute Pydevd src path in it are correct.
2. run ./compile.sh
3. create a Pydev project, and import dist/library.zip/miro into the project srcby link
4. in Debug perspective, start Pydev debug server to listen
5. set breakpoints in the Pydev project
6. run ./debug.sh


To build an installer
=====================

To build an installer, do::

    python setup.py bdist_nsis   

That'll build Miro, then wrap it in a NullSoft installer.  The
resulting files will be something like::

    dist\Miro-2.0-git-twostage.exe
    dist\Miro-2.0-git.exe

The second one is the "full" installer.
